swagger: "2.0"
info:
  description: "Dans ce projet, on va récupérer des proverbes à l'aide d'une API. La deuxième API contient des images et le but final est de générer une carte postale avec une image et un proverbe. Chaque proverbe est défini par des tags qui permmettent d'associer une image correspondante. Voici en détails la description des modèles et des routes."
  version: "1.0.0"
  title: "Postal card generator"
tags:
- name: "Quotes"
schemes:
- "https"
- "http"
paths:
  /Quotes/author/{author}:
    get:
      tags:
      - "Quotes"
      summary: "Recherche d'un proverbe par auteur"
      description: ""
      produces:
      - "application/json"
      - "application/csv"
      parameters:
      - name: "author"
        in: "path"
        description: "Donnez un auteur"
        required: true
        type: "string"
      responses:
        200:
          description: "author/tag exists "
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Quote"
  /Quotes/tags/{tags}:
    get:
      tags:
      - "Quotes"
      summary: "Recherche d'un proverbe par tags"
      description: ""
      produces:
      - "application/json"
      - "application/csv"
      parameters:
      - name: "tags"
        in: "path"
        description: "Donnez un thème"
        required: true
        type: "string"
      responses:
        200:
          description: "quote exists "
          schema:
            $ref: "#/definitions/Quote"
  /postalcard/author/{author}:
    get:
      tags:
      - "Postal Cards"
      summary: "Get a postal card by quote author or quote tag"
      description: ""
      produces:
      - "application/json"
      - "application/csv"
      parameters:
      - name: "author"
        in: "path"
        description: "Donnez un auteur"
        required: true
        type: "string"
      responses:
        200:
          description: "author/tag exists "
          schema:
            type: "array"
            items:
              $ref: "#/definitions/PostalCard"
  /postalcard/tags/{tag}:
    get:
      tags:
      - "Postal Cards"
      summary: "Recherche d'une carte postale par id"
      description: ""
      produces:
      - "application/json"
      - "application/csv"
      parameters:
      - name: "tag"
        in: "path"
        description: "quote tags"
        required: true
        type: "integer"
      responses:
        200:
          description: "postal card exists "
          schema:
            $ref: "#/definitions/PostalCard"
  /postalcard/random:
    get:
      tags:
      - "Postal Cards"
      summary: "Get a random postal card"
      description: ""
      produces:
      - "application/json"
      - "application/csv"
      responses:
        200:
          description: "a postal card exists "
          schema:
            $ref: "#/definitions/PostalCard"
  /Images/getByTheme/{theme}:
    get:
      tags:
      - "Images"
      summary: "Recherche d'une image"
      description: ""
      produces:
      - "application/json"
      - "application/csv"
      parameters:
      - name: "theme"
        in: "path"
        required: true
        type: "string"
      responses:
        200:
          description: "Images exists "
          schema:
            type: "array"
            items:
              $ref: "#/definitions/Image"
  /Images/getById/{id}:
    get:
      tags:
      - "Images"
      summary: "Recherche d'une image par id"
      description: ""
      produces:
      - "application/json"
      - "application/csv"
      parameters:
      - name: "id"
        in: "path"
        description: "image id"
        required: true
        type: "integer"
      responses:
        200:
          description: "image exists "
          schema:
            $ref: "#/definitions/Image"
securityDefinitions:
  petstore_auth:
    type: "oauth2"
    authorizationUrl: "http://petstore.swagger.io/oauth/dialog"
    flow: "implicit"
    scopes:
      write:pets: "modify pets in your account"
      read:pets: "read your pets"
  api_key:
    type: "apiKey"
    name: "api_key"
    in: "header"
definitions:
  Quote:
    type: "object"
    properties:
      quote:
        type: "string"
      author:
        type: "string"
      likes:
        type: "integer"
        format: "int32"
      tags:
        type: "string"
        description: "all tags of quote"
      id:
        type: "integer"
        description: "id of quote"
      language:
        type: "string"
        description: "language of quote"
  PostalCard:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      quote:
        $ref: "#/definitions/Quote"
      image: 
        $ref: "#/definitions/Image"
      theme:
        type: "string"
  Image:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      link:
        type: "string"



